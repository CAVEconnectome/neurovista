{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p><code>neurovista</code>: a Python package for plotting neural morpholgies with PyVista.</p>"},{"location":"api/","title":"Api","text":""},{"location":"api/#neurovista","title":"<code>neurovista</code>","text":"<p>Top-level package for neurovista.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>Coming soon</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs to our issues page.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug, in the form of a minimal reproducible example.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>networkframe could always use more documentation, whether as part of the official networkframe docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to create an issue on GitHub.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that while contributions are welcome, developer/maintainer time is limited.</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started","text":"<p>Ready to contribute? Here's how to set up <code>neurovista</code> for local development.</p> <ul> <li>Fork the repo on GitHub.</li> <li>Clone your fork locally</li> </ul> <pre><code>git clone git@github.com:your_name_here/neurovista.git\n</code></pre> <ul> <li>Ensure pip is installed.</li> <li>Create a virtual environment using pipenv:</li> <li>Start your virtualenv:</li> </ul> <pre><code>source .venv/bin/activate\n</code></pre> <ul> <li>Create a branch for local development:</li> </ul> <pre><code>git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <ul> <li>Make your changes locally</li> <li>When you're done making changes, check that your changes pass the   tests by running pytest:</li> </ul> <pre><code>pytest tests\n</code></pre> <p>Note that once you submit your pull request, GitHub Actions will run the tests also,   including on multiple operating systems and Python versions. Your pull request will   have to pass on all of these before it can be merged.</p> <ul> <li>Commit your changes and push your branch to GitHub:</li> </ul> <pre><code>git add .\ngit commit -m \"Your detailed description of your changes.\"\ngit push origin name-of-your-bugfix-or-feature\n</code></pre> <ul> <li>Submit a pull request through the GitHub website.</li> </ul>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ul> <li>The pull request should include tests if adding a new feature.</li> <li>The docs should be updated with whatever changes you have made. Put   your new functionality into a function with a docstring, and make sure the new   functionality is documented after building the documentation.</li> </ul>"},{"location":"contributing/#documentation-style","title":"Documentation style","text":"<p>We use mkdocs to build the documentation. In particular, we use the mkdocs-material theme, and a variety of other extensions.</p> <p>Note</p> <p>More information codifying our documentation style and principles coming soon. For now, just try to follow the style of the existing documentation.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install <code>neurovista</code>, run this command in your terminal:</p> <pre><code>pip install neurovista\n</code></pre> <p>This is the preferred method to install <code>neurovista</code>, as it will always install the most recent stable release.</p> <p>You can also specify a particular version, e.g.</p> <pre><code>pip install neurovista==5.0.0\n</code></pre> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-source","title":"From source","text":"<p>The source for <code>neurovista</code> can be downloaded from the Github repo.</p> <p>You can either clone the public repository:</p> <pre><code>git clone git://github.com/CAVEconnectome/neurovista\n</code></pre> <p>Or download the tarball:</p> <pre><code>curl -OJL https://github.com/CAVEconnectome/neurovista/tarball/main\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>pip install .\n</code></pre> <p>Or in editable mode, it can be installed with:</p> <pre><code>pip install -e .\n</code></pre>"},{"location":"reference/reference/","title":"Reference","text":"<p>Documentation for the top-level package of neurovista</p>"}]}